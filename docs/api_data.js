define({ "api": [  {    "type": "INVOKE",    "url": "N/A",    "title": "Create Customer",    "name": "create_customer",    "version": "0.0.1",    "group": "Customer",    "description": "<p>Internally create a new customer. This lambda function only create customer object in database and prepare related resource in Cognito User Group, IoT Policy. Payment of other pre-request are not processed here.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the customer. For easier the IoT Rule naming in future, name SHOULD consist of alphanumeric and underscore(_) only.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "shortCode",            "description": "<p>The short code representing the customer. Lower case alphanumeric with length 2 - 5. Any user register under this customer will be prepended with this code, e.g. als-user001</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of the customer. The secret token will be sent to this email.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": ""          }        ]      },      "examples": [        {          "title": "Event-Sample",          "content": "{\n  \"name\": \"Ananse_Limited_School\",\n  \"shortCode\": \"als\",\n  \"email\": \"anansecloudapp@gmail.com\",\n  \"description\": \"XXXXXXX\",\n}",          "type": "json"        }      ]    },    "filename": "src/public/services/internal/customer/create-customer.ts",    "groupTitle": "Customer"  },  {    "type": "POST",    "url": "/device",    "title": "Create Device",    "name": "create_device",    "version": "0.0.1",    "group": "Device",    "permission": [      {        "name": "member"      }    ],    "description": "<p>Create a new device.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "X-aws-authorizer",            "description": "<p>The jwt token got from cognito login.</p>"          }        ]      },      "examples": [        {          "title": "Authorization-Header",          "content": "{\n  \"X-aws-authorizer\": \"ey...........x2046\",\n  \"Content-Type\": \"application/json\",\n  \"origin\": \"https://rtfm.dev.ananse.io\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "deviceId",            "description": "<p>A device identifier got from hardware. *Note: deviceId should be string even though it is number-like.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "serial",            "description": "<p>A serial number got from hardware.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "defaultValue": "SameAsDeviceId",            "description": "<p>Name of the device.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": ""          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "POST /rtfm/device HTTP/1.1\n{\n  \"deviceId\": \"34862\",\n  \"serial\": \"SE-3062470030624770\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "https://rtfm-api.dev.ananse.io"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "deviceUuid",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"deviceuuid\": \"XXXXXXXX-XXXX-XXXX-XXXXXXXXX\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": ""          }        ]      },      "examples": [        {          "title": "Unknown-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"fail to create device\"\n}",          "type": "json"        }      ]    },    "filename": "src/public/services/api/device/create-device.ts",    "groupTitle": "Device"  },  {    "type": "DELETE",    "url": "/device/<deviceUuid>",    "title": "Delete Device",    "name": "delete_device",    "version": "0.0.1",    "group": "Device",    "permission": [      {        "name": "member"      }    ],    "description": "<p>Delete a existing device.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "X-aws-authorizer",            "description": "<p>The jwt token got from cognito login.</p>"          }        ]      },      "examples": [        {          "title": "Authorization-Header",          "content": "{\n  \"X-aws-authorizer\": \"ey...........x2046\",\n  \"Content-Type\": \"application/json\",\n  \"origin\": \"https://rtfm.dev.ananse.io\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "deviceUuid",            "description": ""          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "DELETE /rtfm/device/xxxxxxxx-xxxx-xxxx-xxxxxxxxxx HTTP/1.1",          "type": "Device"        }      ]    },    "sampleRequest": [      {        "url": "https://rtfm-api.dev.ananse.io"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": ""          }        ]      },      "examples": [        {          "title": "No-Device-Error",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"specific deviceUuid not exist: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Not-Owner-Error",          "content": "HTTP/1.1 403 Forbidden\n{\n  \"error\": \"unauthorized to access device: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Unknown-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"fail to delete device\"\n}",          "type": "json"        }      ]    },    "filename": "src/public/services/api/device/delete-device.ts",    "groupTitle": "Device"  },  {    "type": "GET",    "url": "/device/<deviceUuid>",    "title": "Get Device",    "name": "get_device",    "version": "0.0.1",    "group": "Device",    "permission": [      {        "name": "member"      }    ],    "description": "<p>Get a specific device.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "X-aws-authorizer",            "description": "<p>The jwt token got from cognito login.</p>"          }        ]      },      "examples": [        {          "title": "Authorization-Header",          "content": "{\n  \"X-aws-authorizer\": \"ey...........x2046\",\n  \"Content-Type\": \"application/json\",\n  \"origin\": \"https://rtfm.dev.ananse.io\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "deviceUuid",            "description": "<p>A device identifier got from create-device/list-device.</p>"          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "GET /rtfm/device/xxxxxxxx-xxxx-xxxx-xxxxxxxxxx HTTP/1.1",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "https://rtfm-api.dev.ananse.io"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": ""          },          {            "group": "Success 200",            "type": "Device",            "optional": false,            "field": "device",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"device\": {\n    \"deviceUuid\": \"XXXXXXXX-XXXX-XXXX-XXXXXXXXX\",\n    \"deviceId\": \"34862\",\n    \"serial\": \"XXXXXXXXXXXX\",\n    \"name\": \"device-001\",\n    \"owner\": \"customer1\",\n    \"description\": \"hello world\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": ""          }        ]      },      "examples": [        {          "title": "No-Device-Error",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"specific deviceUuid not exist: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Not-Owner-Error",          "content": "HTTP/1.1 403 Forbidden\n{\n  \"error\": \"unauthorized to access device: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Unknown-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"fail to get device\"\n}",          "type": "json"        }      ]    },    "filename": "src/public/services/api/device/get-device.ts",    "groupTitle": "Device"  },  {    "type": "GET",    "url": "/device",    "title": "List Device",    "name": "list_device",    "version": "0.0.1",    "group": "Device",    "permission": [      {        "name": "member"      }    ],    "description": "<p>List all devices belongs to the user.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "X-aws-authorizer",            "description": "<p>The jwt token got from cognito login.</p>"          }        ]      },      "examples": [        {          "title": "Authorization-Header",          "content": "{\n  \"X-aws-authorizer\": \"ey...........x2046\",\n  \"Content-Type\": \"application/json\",\n  \"origin\": \"https://rtfm.dev.ananse.io\"\n}",          "type": "json"        }      ]    },    "parameter": {      "examples": [        {          "title": "Request-Example",          "content": "GET /rtfm/device HTTP/1.1",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "https://rtfm-api.dev.ananse.io"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": ""          },          {            "group": "Success 200",            "type": "Device[]",            "optional": false,            "field": "devices",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"devices\": [{\n    \"deviceUuid\": \"XXXXXXXX-XXXX-XXXX-XXXXXXXXX\",\n    \"deviceId\": \"34862\",\n    \"serial\": \"XXXXXXXXXXXX\",\n    \"name\": \"device-001\",\n    \"owner\": \"customer1\",\n    \"description\": \"hello world\"\n  },{\n    \"deviceUuid\": \"YYYYYYYY-YYYY-YYYY-YYYYYYYY\",\n    \"deviceId\": \"00002\",\n    \"serial\": \"YYYYYYYYYYYY\",\n    \"name\": \"device-002\",\n    \"owner\": \"customer1\",\n    \"description\": \"hello world2\"\n  }]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": ""          }        ]      },      "examples": [        {          "title": "Unknown-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"fail to list device\"\n}",          "type": "json"        }      ]    },    "filename": "src/public/services/api/device/list-device.ts",    "groupTitle": "Device"  },  {    "type": "POST,PUT",    "url": "/device/<deviceUuid>",    "title": "Update Device",    "name": "update_device",    "version": "0.0.1",    "group": "Device",    "permission": [      {        "name": "member"      }    ],    "description": "<p>Update a specific device.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "X-aws-authorizer",            "description": "<p>The jwt token got from cognito login.</p>"          }        ]      },      "examples": [        {          "title": "Authorization-Header",          "content": "{\n  \"X-aws-authorizer\": \"ey...........x2046\",\n  \"Content-Type\": \"application/json\",\n  \"origin\": \"https://rtfm.dev.ananse.io\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "deviceUuid",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Name of the device.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": ""          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "PUT /rtfm/device/xxxxxxxx-xxxx-xxxx-xxxxxxxx HTTP/1.1\n{\n  \"name\": \"device-001-new\",\n  \"description\": \"description-new\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "https://rtfm-api.dev.ananse.io"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "deviceUuid",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"device\": {\n    \"deviceUuid\": \"XXXXXXXX-XXXX-XXXX-XXXXXXXXX\",\n    \"deviceId\": \"34862\",\n    \"serial\": \"XXXXXXXXXXXX\",\n    \"name\": \"device-001-new\",\n    \"owner\": \"customer1\",\n    \"description\": \"description-new\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": ""          }        ]      },      "examples": [        {          "title": "No-Device-Error",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"specific deviceUuid not exist: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Not-Owner-Error",          "content": "HTTP/1.1 403 Forbidden\n{\n  \"error\": \"unauthorized to access device: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Unknown-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"fail to update device\"\n}",          "type": "json"        }      ]    },    "filename": "src/public/services/api/device/update-device.ts",    "groupTitle": "Device"  },  {    "type": "POST",    "url": "/profile",    "title": "Create Profile",    "name": "create_profile",    "version": "0.0.1",    "group": "Profile",    "permission": [      {        "name": "member"      }    ],    "description": "<p>Create a new profile (a virtual identity, usually a student).</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "X-aws-authorizer",            "description": "<p>The jwt token got from cognito login.</p>"          }        ]      },      "examples": [        {          "title": "Authorization-Header",          "content": "{\n  \"X-aws-authorizer\": \"ey...........x2046\",\n  \"Content-Type\": \"application/json\",\n  \"origin\": \"https://rtfm.dev.ananse.io\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "defaultValue": "new profile",            "description": "<p>Name of the profile.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": ""          },          {            "group": "Parameter",            "type": "String[]",            "optional": true,            "field": "groups",            "description": "<p>An array of tags/groups.</p>"          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "POST /rtfm/profile HTTP/1.1\n{\n  \"name\": \"student-001\",\n  \"description\": \"XXXXXX\",\n  \"groups\": [\"running\", \"swimming\", \"S3\"]\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "https://rtfm-api.dev.ananse.io"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "profileUuid",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"profileUuid\": \"XXXXXXXX-XXXX-XXXX-XXXXXXXXX\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": ""          }        ]      },      "examples": [        {          "title": "Unknown-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"fail to create profile\"\n}",          "type": "json"        }      ]    },    "filename": "src/public/services/api/profile/create-profile.ts",    "groupTitle": "Profile"  },  {    "type": "DELETE",    "url": "/profile/<profileUuid>",    "title": "Delete Profile",    "name": "delete_profile",    "version": "0.0.1",    "group": "Profile",    "permission": [      {        "name": "member"      }    ],    "description": "<p>Delete a existing profile.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "X-aws-authorizer",            "description": "<p>The jwt token got from cognito login.</p>"          }        ]      },      "examples": [        {          "title": "Authorization-Header",          "content": "{\n  \"X-aws-authorizer\": \"ey...........x2046\",\n  \"Content-Type\": \"application/json\",\n  \"origin\": \"https://rtfm.dev.ananse.io\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "profileUuid",            "description": ""          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "DELETE /rtfm/profile/xxxxxxxx-xxxx-xxxx-xxxxxxxxxx HTTP/1.1",          "type": "Device"        }      ]    },    "sampleRequest": [      {        "url": "https://rtfm-api.dev.ananse.io"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": ""          }        ]      },      "examples": [        {          "title": "No-Profile-Error",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"specific profileUuid not exist: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Not-Owner-Error",          "content": "HTTP/1.1 403 Forbidden\n{\n  \"error\": \"unauthorized to access profile: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Unknown-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"fail to delete profile\"\n}",          "type": "json"        }      ]    },    "filename": "src/public/services/api/profile/delete-profile.ts",    "groupTitle": "Profile"  },  {    "type": "GET",    "url": "/profile/<profileUuid>",    "title": "Get Profile",    "name": "get_profile",    "version": "0.0.1",    "group": "Profile",    "permission": [      {        "name": "member"      }    ],    "description": "<p>Get a specific profile.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "X-aws-authorizer",            "description": "<p>The jwt token got from cognito login.</p>"          }        ]      },      "examples": [        {          "title": "Authorization-Header",          "content": "{\n  \"X-aws-authorizer\": \"ey...........x2046\",\n  \"Content-Type\": \"application/json\",\n  \"origin\": \"https://rtfm.dev.ananse.io\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "profileUuid",            "description": "<p>A profile identifier got from create-profile/list-profile.</p>"          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "GET /rtfm/profile/xxxxxxxx-xxxx-xxxx-xxxxxxxxxx HTTP/1.1",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "https://rtfm-api.dev.ananse.io"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": ""          },          {            "group": "Success 200",            "type": "Profile",            "optional": false,            "field": "profile",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"profile\": {\n    \"profileUuid\": \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXX\",\n    \"name\": \"profile-001\",\n    \"owner\": \"customer1\",\n    \"description\": \"hello world\",\n    \"groups\": [\"running\", \"swimming\", \"S3\"]\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": ""          }        ]      },      "examples": [        {          "title": "No-Profile-Error",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"specific profileUuid not exist: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Not-Owner-Error",          "content": "HTTP/1.1 403 Forbidden\n{\n  \"error\": \"unauthorized to access profile: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Unknown-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"fail to get profile\"\n}",          "type": "json"        }      ]    },    "filename": "src/public/services/api/profile/get-profile.ts",    "groupTitle": "Profile"  },  {    "type": "GET",    "url": "/profile",    "title": "List Profile",    "name": "list_profile",    "version": "0.0.1",    "group": "Profile",    "permission": [      {        "name": "member"      }    ],    "description": "<p>List all profiles belongs to the user.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "X-aws-authorizer",            "description": "<p>The jwt token got from cognito login.</p>"          }        ]      },      "examples": [        {          "title": "Authorization-Header",          "content": "{\n  \"X-aws-authorizer\": \"ey...........x2046\",\n  \"Content-Type\": \"application/json\",\n  \"origin\": \"https://rtfm.dev.ananse.io\"\n}",          "type": "json"        }      ]    },    "parameter": {      "examples": [        {          "title": "Request-Example",          "content": "GET /rtfm/profile HTTP/1.1",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "https://rtfm-api.dev.ananse.io"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": ""          },          {            "group": "Success 200",            "type": "Profile[]",            "optional": false,            "field": "profiles",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"profiles\": [{\n    \"profileUuid\": \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXX\",\n    \"name\": \"profile-001\",\n    \"owner\": \"customer1\",\n    \"description\": \"hello world\",\n    \"groups\": [\"running\", \"swimming\", \"S3\"]\n  },{\n    \"profileUuid\": \"YYYYYYYY-YYYY-YYYY-YYYYYYYY\",\n    \"name\": \"profile-002\",\n    \"owner\": \"customer1\"\n  }]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": ""          }        ]      },      "examples": [        {          "title": "Unknown-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"fail to list profile\"\n}",          "type": "json"        }      ]    },    "filename": "src/public/services/api/profile/list-profile.ts",    "groupTitle": "Profile"  },  {    "type": "POST,PUT",    "url": "/profile/<profileUuid>",    "title": "Update Profile",    "name": "update_profile",    "version": "0.0.1",    "group": "Profile",    "permission": [      {        "name": "member"      }    ],    "description": "<p>Update a specific profile.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "X-aws-authorizer",            "description": "<p>The jwt token got from cognito login.</p>"          }        ]      },      "examples": [        {          "title": "Authorization-Header",          "content": "{\n  \"X-aws-authorizer\": \"ey...........x2046\",\n  \"Content-Type\": \"application/json\",\n  \"origin\": \"https://rtfm.dev.ananse.io\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "profileUuid",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Name of the profile.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": ""          },          {            "group": "Parameter",            "type": "String[]",            "optional": true,            "field": "groups",            "description": "<p>An array of tags/groups. Replace the whole array, NOT SUPPORT individual add/remove.</p>"          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "PUT /rtfm/profile/xxxxxxxx-xxxx-xxxx-xxxxxxxx HTTP/1.1\n{\n  \"name\": \"profile-001-new\",\n  \"description\": \"description-new\",\n  \"groups\": [\"running\", \"S4\"]\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "https://rtfm-api.dev.ananse.io"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": ""          },          {            "group": "Success 200",            "type": "Profile",            "optional": false,            "field": "profile",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"profile\": {\n    \"profileUuid\": \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXX\",\n    \"name\": \"profile-001-new\",\n    \"owner\": \"customer1\",\n    \"description\": \"description-new\",\n    \"groups\": [\"running\", \"S4\"]\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": ""          }        ]      },      "examples": [        {          "title": "No-Profile-Error",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"specific profileUuid not exist: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Not-Owner-Error",          "content": "HTTP/1.1 403 Forbidden\n{\n  \"error\": \"unauthorized to access profile: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Unknown-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"fail to update profile\"\n}",          "type": "json"        }      ]    },    "filename": "src/public/services/api/profile/update-profile.ts",    "groupTitle": "Profile"  },  {    "type": "POST",    "url": "/record",    "title": "Create Record",    "name": "create_record",    "version": "0.0.1",    "group": "Record",    "permission": [      {        "name": "member"      }    ],    "description": "<p>Create a new record.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "X-aws-authorizer",            "description": "<p>The jwt token got from cognito login.</p>"          }        ]      },      "examples": [        {          "title": "Authorization-Header",          "content": "{\n  \"X-aws-authorizer\": \"ey...........x2046\",\n  \"Content-Type\": \"application/json\",\n  \"origin\": \"https://rtfm.dev.ananse.io\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "profileUuid",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "deviceUuids",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "defaultValue": "PROFILE_NAME - DATE",            "description": "<p>Name of the record.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": ""          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "POST /rtfm/record HTTP/1.1\n{\n  \"profileUuid\": \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n  \"deviceUuid\": \"YYYYYYYY-YYYY-YYYY-YYYY-YYYYYYYYYYYY\",\n  \"name\": \"record-001\",\n  \"description\": \"XXXXXX\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "https://rtfm-api.dev.ananse.io"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "recordUuid",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"recordUuid\": \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXX\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": ""          }        ]      },      "examples": [        {          "title": "Profile-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"invalid profile. The profile may not exist or you are not authorized to access it\"\n}",          "type": "json"        },        {          "title": "Device-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"invalid device. The device may not exist or you are not authorized to access it\"\n}",          "type": "json"        },        {          "title": "Unknown-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"fail to create record\"\n}",          "type": "json"        }      ]    },    "filename": "src/public/services/api/record/create-record.ts",    "groupTitle": "Record"  },  {    "type": "DELETE",    "url": "/record/<recordUuid>",    "title": "Delete Record",    "name": "delete_record",    "version": "0.0.1",    "group": "Record",    "permission": [      {        "name": "member"      }    ],    "description": "<p>Delete a specific record.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "X-aws-authorizer",            "description": "<p>The jwt token got from cognito login.</p>"          }        ]      },      "examples": [        {          "title": "Authorization-Header",          "content": "{\n  \"X-aws-authorizer\": \"ey...........x2046\",\n  \"Content-Type\": \"application/json\",\n  \"origin\": \"https://rtfm.dev.ananse.io\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "recordUuid",            "description": ""          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "DELETE /rtfm/record/xxxxxxxx-xxxx-xxxx-xxxxxxxxxx HTTP/1.1",          "type": "Device"        }      ]    },    "sampleRequest": [      {        "url": "https://rtfm-api.dev.ananse.io"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": ""          }        ]      },      "examples": [        {          "title": "No-Record-Error",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"specific recordUuid not exist: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Not-Owner-Error",          "content": "HTTP/1.1 403 Forbidden\n{\n  \"error\": \"unauthorized to access record: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Unknown-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"fail to delete record\"\n}",          "type": "json"        }      ]    },    "filename": "src/public/services/api/record/delete-record.ts",    "groupTitle": "Record"  },  {    "type": "GET",    "url": "/record/<recordUuid>",    "title": "Get Record",    "name": "get_record",    "version": "0.0.1",    "group": "Record",    "permission": [      {        "name": "member"      }    ],    "description": "<p>Get a specific record.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "X-aws-authorizer",            "description": "<p>The jwt token got from cognito login.</p>"          }        ]      },      "examples": [        {          "title": "Authorization-Header",          "content": "{\n  \"X-aws-authorizer\": \"ey...........x2046\",\n  \"Content-Type\": \"application/json\",\n  \"origin\": \"https://rtfm.dev.ananse.io\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "recordUuid",            "description": ""          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "GET /rtfm/record/xxxxxxxx-xxxx-xxxx-xxxxxxxxxx HTTP/1.1",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "https://rtfm-api.dev.ananse.io"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": ""          },          {            "group": "Success 200",            "type": "Record",            "optional": false,            "field": "record",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"record\": {\n    \"recordUuid\": \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXX\",\n    \"profileUuid\": \"YYYYYYYY-YYYY-YYYY-YYYY-YYYYYYYYYYYYY\",\n    \"deviceUuid\": \"ZZZZZZZZ-ZZZZ-ZZZZ-ZZZZ-ZZZZZZZZZZZZZ\",\n    \"name\": \"record-001\",\n    \"owner\": \"customer1\",\n    \"description\": \"hello world\",\n    \"startTime\": 15000000000000,\n    \"endTime\": 15100000000000,\n    \"dataPoints\": [{\n      \"timestamp\": 1509353121992,\n      \"hearbeat\": 75\n    },{\n      \"timestamp\": 1509353121995,\n      \"hearbeat\": 74\n    }]\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": ""          }        ]      },      "examples": [        {          "title": "No-Record-Error",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"specific recordUuid not exist: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Not-Owner-Error",          "content": "HTTP/1.1 403 Forbidden\n{\n  \"error\": \"unauthorized to access record: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Unknown-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"fail to get record\"\n}",          "type": "json"        }      ]    },    "filename": "src/public/services/api/record/get-record.ts",    "groupTitle": "Record"  },  {    "type": "GET",    "url": "/record",    "title": "List Record",    "name": "list_record",    "version": "0.0.1",    "group": "Record",    "permission": [      {        "name": "member"      }    ],    "description": "<p>List all records belongs to the user.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "X-aws-authorizer",            "description": "<p>The jwt token got from cognito login.</p>"          }        ]      },      "examples": [        {          "title": "Authorization-Header",          "content": "{\n  \"X-aws-authorizer\": \"ey...........x2046\",\n  \"Content-Type\": \"application/json\",\n  \"origin\": \"https://rtfm.dev.ananse.io\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "profileUuid",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "startTime",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "endTime",            "description": "<p>*Note: If the record doesn't finished, you MUST ignore endTime parameter to search that record.</p>"          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "GET /rtfm/record?profileUuid=XXXXX-XXXXX-XXXXX-XXXX&startTime=15000000000000&endTime=15100000000000 HTTP/1.1",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "https://rtfm-api.dev.ananse.io"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": ""          },          {            "group": "Success 200",            "type": "Record[]",            "optional": false,            "field": "records",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"records\": [{\n    \"recordUuid\": \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXX\",\n    \"profileUuid\": \"YYYYYYYY-YYYY-YYYY-YYYY-YYYYYYYYYYYYY\",\n    \"deviceUuid\": \"ZZZZZZZZ-ZZZZ-ZZZZ-ZZZZ-ZZZZZZZZZZZZZ\",\n    \"name\": \"record-001\",\n    \"owner\": \"customer1\",\n    \"description\": \"hello world\",\n    \"startTime\": 15000000000000,\n    \"endTime\": 15100000000000,\n    \"dataPoints\": [{\n      \"timestamp\": 1509353121992,\n      \"hearbeat\": 75\n    },{\n      \"timestamp\": 1509353121995,\n      \"hearbeat\": 74\n    }]\n  },{\n    \"recordUuid\": \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX2\"\n    \"profileUuid\": \"YYYYYYYY-YYYY-YYYY-YYYY-YYYYYYYYYYYYY\",\n    \"deviceUuid\": \"ZZZZZZZZ-ZZZZ-ZZZZ-ZZZZ-ZZZZZZZZZZZZZ\",\n    \"name\": \"record-002\",\n    \"owner\": \"customer1\",\n    \"startTime\": 15010000000000\n  }]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": ""          }        ]      },      "examples": [        {          "title": "Unknown-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"fail to list record\"\n}",          "type": "json"        }      ]    },    "filename": "src/public/services/api/record/list-record.ts",    "groupTitle": "Record"  },  {    "type": "POST,PUT",    "url": "/record/<recordUuid>/<action>",    "title": "Update Record",    "name": "update_record",    "version": "0.0.1",    "group": "Record",    "permission": [      {        "name": "member"      }    ],    "description": "<p>Update a specific record.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "X-aws-authorizer",            "description": "<p>The jwt token got from cognito login.</p>"          }        ]      },      "examples": [        {          "title": "Authorization-Header",          "content": "{\n  \"X-aws-authorizer\": \"ey...........x2046\",\n  \"Content-Type\": \"application/json\",\n  \"origin\": \"https://rtfm.dev.ananse.io\"\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "recordUuid",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"_stop\""            ],            "optional": true,            "field": "action",            "description": "<p>To stop the action, request /record/<recordUuid>/_stop. To normal update of record, just /record/<recordUuid></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Name of the record.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": ""          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "PUT /rtfm/record/xxxxxxxx-xxxx-xxxx-xxxxxxxx/_stop HTTP/1.1\n{\n  \"name\": \"record-001-new\",\n  \"description\": \"description-new\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "https://rtfm-api.dev.ananse.io"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": ""          },          {            "group": "Success 200",            "type": "Profile",            "optional": false,            "field": "record",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"record\": {\n    \"recordUuid\": \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXX\",\n    \"profileUuid\": \"YYYYYYYY-YYYY-YYYY-YYYY-YYYYYYYYYYYYY\",\n    \"deviceUuid\": \"ZZZZZZZZ-ZZZZ-ZZZZ-ZZZZ-ZZZZZZZZZZZZZ\",\n    \"name\": \"record-001\",\n    \"owner\": \"customer1\",\n    \"description\": \"hello world\",\n    \"startTime\": 15000000000000,\n    \"endTime\": 15100000000000,\n    \"dataPoints\": [{\n      \"timestamp\": 1509353121992,\n      \"hearbeat\": 75\n    },{\n      \"timestamp\": 1509353121995,\n      \"hearbeat\": 74\n    }]\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": ""          }        ]      },      "examples": [        {          "title": "No-Record-Error",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"specific recordUuid not exist: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Not-Owner-Error",          "content": "HTTP/1.1 403 Forbidden\n{\n  \"error\": \"unauthorized to access record: abcdefgh-xxxx-xxxx-xxxxxxxxxxxxxx\"\n}",          "type": "json"        },        {          "title": "Repeat-Stop-Error",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": \"the record had been stopped before\"\n}",          "type": "json"        },        {          "title": "Unknown-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"fail to update record\"\n}",          "type": "json"        }      ]    },    "filename": "src/public/services/api/record/update-record.ts",    "groupTitle": "Record"  },  {    "type": "POST",    "url": "/user",    "title": "Create User",    "name": "create_user",    "version": "0.0.1",    "group": "User",    "permission": [      {        "name": "member"      }    ],    "description": "<p>Create a new user.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>A username consist of lower case letters and numbers only. EXCLUDING the customer name prefix.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>The email of USER. The one-time-password will be sent to here.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "customerName",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>The secret token of the customer.</p>"          }        ]      },      "examples": [        {          "title": "Request-Example",          "content": "POST /rtfm/user HTTP/1.1\n{\n  \"username\": \"ctm\",\n  \"email\": \"ctm@dbs.edu.hk\",\n  \"customerName\": \"DBS\",\n  \"token\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "https://rtfm-api.dev.ananse.io"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": ""          }        ]      },      "examples": [        {          "title": "Customer-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"specific customer not exist: HKNOIT\"\n}",          "type": "json"        },        {          "title": "Authentication-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"secret token invalid\"\n}",          "type": "json"        },        {          "title": "Unknown-Error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"fail to create user\"\n}",          "type": "json"        }      ]    },    "filename": "src/public/services/api/user/create-user.ts",    "groupTitle": "User"  }] });
